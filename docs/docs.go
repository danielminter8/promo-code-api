// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag

package docs

import (
	"bytes"
	"encoding/json"
	"strings"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/promo": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieves all promo codes",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/promocodes.Promocode"
                        }
                    }
                }
            }
        },
        "/promo/admin": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Add promo code",
                "parameters": [
                    {
                        "description": "Example Data",
                        "name": "name,quantityAllocated,quantityAvailable,dateFrom,dateTo,amount",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/promocodes.Promocode"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/promocodes.Promocode"
                        }
                    }
                }
            }
        },
        "/promo/admin/{id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "Retrieves all promo codes",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/promocodes.Promocode"
                        }
                    }
                }
            },
            "delete": {
                "produces": [
                    "application/json"
                ],
                "summary": "Delete promo code by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ]
            },
            "patch": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Update promo code by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Example Data",
                        "name": "quantityAllocated,quantityAvailable,dateFrom,dateTo,amount",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/promocodes.Promocode"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/promocodes.Promocode"
                        }
                    }
                }
            }
        },
        "/promo/app/{id}": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "summary": "Should minus from quantity available as it was purchased",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ]
            }
        }
    },
    "definitions": {
        "promocodes.Promocode": {
            "type": "object",
            "required": [
                "amount",
                "dateFrom",
                "dateTo",
                "name",
                "quantityAllocated",
                "quantityAvailable"
            ],
            "properties": {
                "amount": {
                    "type": "number",
                    "format": "string",
                    "example": 5.54
                },
                "dateFrom": {
                    "type": "string",
                    "format": "string",
                    "example": "1/12"
                },
                "dateTo": {
                    "type": "string",
                    "format": "string",
                    "example": "5/12"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string",
                    "format": "string",
                    "example": "barone"
                },
                "quantityAllocated": {
                    "type": "integer",
                    "format": "string",
                    "example": 12
                },
                "quantityAvailable": {
                    "type": "integer",
                    "format": "string",
                    "example": 5
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "1.0",
	Host:        "localhost:8080",
	BasePath:    "/api/v1",
	Schemes:     []string{},
	Title:       "Promo Code API",
	Description: "This is a simple api server using the gin web framework.",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
